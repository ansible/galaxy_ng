x-common-env: &common-env

  DJANGO_SUPERUSER_USERNAME: admin
  DJANGO_SUPERUSER_EMAIL: admin@example.com
  DJANGO_SUPERUSER_PASSWORD: admin

  POSTGRES_USER: galaxy_ng
  POSTGRES_PASSWORD: galaxy_ng
  POSTGRES_DB: galaxy_ng

  # no spying
  PULP_ANALYTICS: 'false'

  # normally goes into settings.py ...
  PULP_DATABASES__default__ENGINE: django.db.backends.postgresql
  PULP_DATABASES__default__NAME: galaxy_ng
  PULP_DATABASES__default__USER: galaxy_ng
  PULP_DATABASES__default__PASSWORD: galaxy_ng
  PULP_DATABASES__default__HOST: postgres
  PULP_DATABASES__default__PORT: 5432

  PULP_DEBUG: 1
  PULP_GALAXY_DEPLOYMENT_MODE: 'standalone'
  PULP_DEFAULT_FILE_STORAGE: "pulpcore.app.models.storage.FileSystem"
  PULP_REDIRECT_TO_OBJECT_STORAGE: 'false'

  # Hostname and prefix has to be correct
  PULP_GALAXY_API_PATH_PREFIX: '/api/galaxy/'
  PULP_CONTENT_PATH_PREFIX: '/pulp/content/'
  PULP_ANSIBLE_API_HOSTNAME: 'https://localhost'
  PULP_ANSIBLE_CONTENT_HOSTNAME: "https://localhost"
  PULP_CONTENT_ORIGIN: "https://localhost"
  PULP_CSRF_TRUSTED_ORIGINS: "['https://localhost']"

  # signing ...
  ENABLE_SIGNING: 0
  PULP_GALAXY_AUTO_SIGN_COLLECTIONS: 'false'
  PULP_GALAXY_REQUIRE_CONTENT_APPROVAL: 'true'
  PULP_GALAXY_REQUIRE_SIGNATURE_FOR_APPROVAL: 'false'
  PULP_GALAXY_COLLECTION_SIGNING_SERVICE: 'ansible-default'
  PULP_GALAXY_CONTAINER_SIGNING_SERVICE: 'container-default'

  # pulp container ...
  PULP_TOKEN_AUTH_DISABLED: 'false'
  PULP_TOKEN_SERVER: 'https://localhost/token/'
  PULP_TOKEN_SIGNATURE_ALGORITHM: 'ES256'
  PULP_PUBLIC_KEY_PATH: '/src/galaxy_ng/dev/common/container_auth_public_key.pem'
  PULP_PRIVATE_KEY_PATH: '/src/galaxy_ng/dev/common/container_auth_private_key.pem'

  # auth ...
  PULP_GALAXY_AUTHENTICATION_CLASSES: "['galaxy_ng.app.auth.session.SessionAuthentication', 'ansible_base.jwt_consumer.hub.auth.HubJWTAuth', 'rest_framework.authentication.TokenAuthentication', 'rest_framework.authentication.BasicAuthentication']"
  PULP_ANSIBLE_BASE_JWT_VALIDATE_CERT: 'false'
  PULP_ANSIBLE_BASE_JWT_KEY: 'https://localhost'
  PULP_GALAXY_FEATURE_FLAGS__external_authentication: 'true'

  # disable user/group modifications
  PULP_ALLOW_LOCAL_RESOURCE_MANAGEMENT: 'false'

  # role content workaround ..
  PULP_ANSIBLE_BASE_ROLES_REQUIRE_VIEW: 'false'


services:
  base_img:
    build:
      context: .
      dockerfile: Dockerfile
    image: "localhost/galaxy_ng/galaxy_ng:base"

  redis:
    image: "redis:5"

  postgres:
    image: "postgres:13"
    ports:
      - '5433:5432'
    environment:
      <<: *common-env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "galaxy_ng"]
      interval: 10s
      retries: 5
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
 
  helper:
    image: quay.io/centos/centos:stream9
    environment:
      <<: *common-env
    depends_on:
      - postgres
    volumes:
      - "etc_pulp_certs:/etc/pulp/certs"
      - "var_lib_pulp:/var/lib/pulp"
    command: |
      bash -c "
        if [[ ! -e /etc/pulp/certs/database_fields.symmetric.key ]] || [[ -s /etc/pulp/certs/database_fields.symmetric.key ]]; then
          mkdir -p /etc/pulp/certs/;
          echo 'check openssl and install ...';
          rpm -q openssl || dnf -y install openssl;
          echo 'generate key ...';
          openssl rand -base64 32 > /etc/pulp/certs/database_fields.symmetric.key;
          echo 'chown key ...';
          chmod 640 /etc/pulp/certs/database_fields.symmetric.key;
        else
          echo 'symmetric key exists'
        fi;
        find /etc/pulp ;
        echo '# KEY >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>';
        cat /etc/pulp/certs/database_fields.symmetric.key;
        echo '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<';
        echo "DONE!";
      "

  migrations:
    image: "localhost/galaxy_ng/galaxy_ng:base"
    depends_on:
      - base_img
      - postgres
      - helper
    volumes:
      - "etc_pulp_certs:/etc/pulp/certs"
      - "var_lib_pulp:/var/lib/pulp"
      - ".:/src/galaxy_ng"
    environment:
      <<: *common-env
    user: root
    command: |
      bash -c "
        set -e;
        while [[ ! -f /etc/pulp/certs/database_fields.symmetric.key ]]; do
          echo 'Waiting for key';
          sleep 2;
        done;
        pulpcore-manager check --database default;
        pulpcore-manager migrate;
        touch /var/lib/pulp/.migrated;
        pulpcore-manager shell < /src/galaxy_ng/dev/common/setup_test_data.py;
        pulpcore-manager createsuperuser --noinput;
      "

  api:
    image: "localhost/galaxy_ng/galaxy_ng:base"
    depends_on:
      - base_img
      - postgres
      - helper
      - migrations
    volumes:
      - "etc_pulp_certs:/etc/pulp/certs"
      - "var_lib_pulp:/var/lib/pulp"
      - ".:/src/galaxy_ng"
    environment:
      <<: *common-env
    extra_hosts:
      localhost: "host-gateway"
    networks:
      - default
      - service-mesh
    command: |
      bash -c "
        while [[ ! -f /var/lib/pulp/.migrated ]]; do
          echo 'Waiting for migrations ...';
          sleep 2;
        done && exec pulpcore-api --reload;
      "

  content:
    image: "localhost/galaxy_ng/galaxy_ng:base"
    depends_on:
      - base_img
      - postgres
      - helper
      - migrations
    volumes:
      - "etc_pulp_certs:/etc/pulp/certs"
      - "var_lib_pulp:/var/lib/pulp"
      - ".:/src/galaxy_ng"
    environment:
      <<: *common-env
    extra_hosts:
      localhost: "host-gateway"
    networks:
      - default
      - service-mesh
    command: |
      bash -c "
        while [[ ! -f /var/lib/pulp/.migrated ]]; do
          echo 'Waiting for migrations ...';
          sleep 2;
        done && exec pulpcore-content --reload;
      "

  worker:
    image: "localhost/galaxy_ng/galaxy_ng:base"
    depends_on:
      - base_img
      - postgres
      - helper
      - migrations
    volumes:
      - "etc_pulp_certs:/etc/pulp/certs"
      - "var_lib_pulp:/var/lib/pulp"
      - ".:/src/galaxy_ng"
    environment:
      <<: *common-env
    command: |
      bash -c "
        while [[ ! -f /var/lib/pulp/.migrated ]]; do
          echo 'Waiting for migrations ...';
          sleep 2;
        done && exec pulpcore-worker;
      "

  nginx:
    image: "nginx:latest"
    depends_on:
      - base_img
      - postgres
      - helper
      - migrations
      - api
      - content
    ports:
      - '5001:5001'
    volumes:
      - './dev/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'

volumes:
  var_lib_pulp:
    name: var_lib_pulp 
  etc_pulp_certs:
    name: etc_pulp_certs 

networks:
  service-mesh:
    name: service-mesh
