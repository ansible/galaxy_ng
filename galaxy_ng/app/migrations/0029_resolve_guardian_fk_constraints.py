# Generated by Django 3.2.13 on 2022-07-25 21:07

from django.db import migrations, connection


def remove_guardian_fk_constraints(apps, schema_editor):
    """
    Remove foreign key constraints in the guardian tables
    guardian_groupobjectpermission and guardian_userobjectpermission.

    This allows for objects in other tables to be deleted without
    violating these foreign key constraints.

    This also allows for the these tables to remain in the database for reference purposes.
    """

    group_fk_constraints = [
        "guardian_groupobject_content_type_id_7ade36b8_fk_django_co",
        "guardian_groupobject_group_id_4bbbfb62_fk_auth_grou",
        "guardian_groupobject_permission_id_36572738_fk_auth_perm"
    ]

    user_fk_constraints = [
        "guardian_userobjectp_content_type_id_2e892405_fk_django_co",
        "guardian_userobjectp_permission_id_71807bfc_fk_auth_perm",
        "guardian_userobjectp_user_id_d5c1e964_fk_galaxy_us",
    ]

    with connection.cursor() as cursor:
        for group_constraint in group_fk_constraints:
            cursor.execute(
                f"ALTER TABLE guardian_groupobjectpermission DROP CONSTRAINT {group_constraint};"
            )
        for user_constraint in user_fk_constraints:
            cursor.execute(
                f"ALTER TABLE guardian_userobjectpermission DROP CONSTRAINT {user_constraint};"
            )


DROP_GUARDIAN_TABLES = """
DROP TABLE guardian_groupobjectpermission;
DROP TABLE guardian_userobjectpermission;
"""

class Migration(migrations.Migration):

    dependencies = [
        ('galaxy', '0028_move_perms_to_roles'),
    ]

    operations = [
        migrations.RunPython(
            code=remove_guardian_fk_constraints, reverse_code=migrations.RunPython.noop,
        ),
        # migrations.RunSQL(sql=DROP_GUARDIAN_TABLES, reverse_sql=migrations.RunSQL.noop),
    ]
