FROM registry.access.redhat.com/ubi8

ARG USER_ID=1000
ARG USER_NAME=galaxy
ARG USER_GROUP=galaxy
ARG COMPOSE_PROFILE
ARG LOCK_REQUIREMENTS
ARG DEV_SOURCE_PATH
ARG DEV_IMAGE_SUFFIX
ARG DEV_VOLUME_SUFFIX

ENV LANG=en_US.UTF-8 \
    PYTHONUNBUFFERED=1 \
    PULP_SETTINGS=/etc/pulp/settings.py \
    DJANGO_SETTINGS_MODULE=pulpcore.app.settings \
    COMPOSE_PROFILE="${COMPOSE_PROFILE}" \
    LOCK_REQUIREMENTS="${LOCK_REQUIREMENTS}" \
    DEV_SOURCE_PATH="${DEV_SOURCE_PATH}" \
    DEV_IMAGE_SUFFIX="${DEV_IMAGE_SUFFIX}" \
    DEV_VOLUME_SUFFIX="${DEV_VOLUME_SUFFIX}"

RUN set -ex; \
    id --group "${USER_GROUP}" &>/dev/null \
    || groupadd --gid "${USER_ID}" "${USER_GROUP}"; \
    \
    useradd --uid ${USER_ID} --gid "${USER_GROUP}" "${USER_NAME}"

# Install dependencies:
#   * glibc-langpack-en: install missing en_US.UTF-8 locale
# NOTE(cutwater): This is a workaround for https://bugs.centos.org/view.php?id=16934
#   See also: https://bugzilla.redhat.com/show_bug.cgi?id=1680124#c6
RUN set -ex; \
    touch /var/lib/rpm/* \
    && dnf -y install \
        git \
        gcc \
        glibc-langpack-en \
        python38-devel \
        libpq \
        libpq-devel \
        pinentry \
        make \
        openldap-devel \
    && dnf clean all \
    && rm -rf /var/cache/dnf/ \
    && rm -f /var/lib/rpm/__db.* \
    && mkdir --mode=2775 /venv \
    && chown ${USER_NAME}:${USER_GROUP} /venv \
    && mkdir --mode=2775 /app \
    && chown ${USER_NAME}:${USER_GROUP} /app

# Install entr so we can have reload on worker processes
RUN git clone https://github.com/eradman/entr && \
    cd entr && \
    cp Makefile.linux Makefile && \
    make && \
    make install

USER ${USER_NAME}:${USER_GROUP}
RUN set -ex; \
    python3 -m venv /venv

ENV PATH="/venv/bin:${PATH}" \
    VIRTUAL_ENV="/venv"

COPY ./requirements/requirements.common.txt /tmp/requirements.txt
COPY ./dev/common/ansible-sign.key /tmp/ansible-sign.key

RUN set -ex; \
    pip install --no-cache-dir --upgrade pip \
    && if [[ "${LOCK_REQUIREMENTS}" -eq "1" ]]; then \
    pip install --no-cache-dir --requirement /tmp/requirements.txt; fi

# Install application
COPY --chown=${USER_NAME}:${USER_GROUP} . /app

# When LOCK_REQUIREMENTS is disabled avoid running collectstatic here
# on that case developer should run collectstatic manually
RUN set -ex; \
    pip install --no-cache-dir --editable /app \
    && pip install -r /app/requirements/requirements.dev.txt

USER root:root
RUN set -ex; \
    mkdir --mode=2775 -p /etc/pulp/certs/ && \
    if [[ "${LOCK_REQUIREMENTS}" -eq "1" ]]; then \
    PULP_CONTENT_ORIGIN=x django-admin collectstatic; fi

# Finalize installation
RUN set -ex; \
    mkdir -p /entrypoints.d \
            /etc/ansible \
    && mkdir --mode=2775 -p /var/lib/pulp \
    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp \
    && mkdir --mode=2775 -p \
             /var/lib/pulp/artifact \
             /var/lib/pulp/tmp \
             /var/lib/pulp/scripts \
             /etc/pulp/certs \
             /tmp/ansible \
    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp/artifact \
    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp/tmp \
    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp/scripts \
    && chown ${USER_NAME}:${USER_GROUP} /etc/pulp/certs \
    && chown ${USER_NAME}:${USER_GROUP} \
        /tmp/ansible \
        /etc/ansible \
    && chmod -R 0775 /app/docker/entrypoint.sh \
                     /app/docker/bin/* \
    && mv /app/docker/entrypoint.sh /entrypoint.sh \
    && mv /app/ansible.cfg /etc/ansible/ansible.cfg \
    && mv /app/docker/bin/* /usr/local/bin \
    && touch /var/log/galaxy_api_access.log \
    && chmod 0644 /var/log/galaxy_api_access.log \
    && chown galaxy:galaxy /var/log/galaxy_api_access.log \
    && echo "DNmNdwgyZugTax9S64J0FITTr9IHPxbuoF1F1CGPr68=" > /etc/pulp/certs/database_fields.symmetric.key

# This symmetric.key is for dev only and should not be used in production
# DNmNdwgyZugTax9S64J0FITTr9IHPxbuoF1F1CGPr68=

USER "${USER_NAME}"
VOLUME [ "/var/lib/pulp", "/tmp/ansible" ]
ENTRYPOINT [ "/entrypoint.sh" ]
