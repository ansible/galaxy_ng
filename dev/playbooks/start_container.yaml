# Ansible playbook to start the pulp service container and its supporting services
---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars/main.yaml
  tasks:
    - name: "Create Settings Directories"
      file:
        path: "cache/{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - settings
        #- ssh
        #- ~/.config/pulp_smash

    - name: "Generate Pulp Settings"
      template:
        src: settings.py.j2
        dest: cache/settings/settings.py

    # required for hostname resolution inside the container(s)
    - name: "Setup docker networking"
      docker_network:
        name: pulp_ci_bridge

    - name: "The 'event' directory is owned by root and can't be volume mounted"
      shell: rm -rf ../../event
      become: true

    - name: "The 'supervise' directory is owned by root and can't be volume mounted"
      shell: rm -rf ../../supervise
      become: true

    - name: "Start Service Containers"
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        auto_remove: true
        recreate: true
        privileged: true
        networks:
          - name: pulp_ci_bridge
            aliases: "{{ item.name }}"
        volumes: "{{ item.volumes | default(omit) }}"
        env: "{{ item.env | default(omit) }}"
        command: "{{ item.command | default(omit) }}"
        state: started
      loop: "{{ services | default([]) }}"

    - name: add the pulp container as an inventory host
      add_host:
        name: pulp

- hosts: pulp
  connection: docker
  gather_facts: false
  vars:
    s6_services_to_restart:
      - pulpcore-api
      - pulpcore-content
      - pulpcore-worker@1
      - pulpcore-worker@2
      - pulpcore-worker@3
      - pulpcore-worker@4
      - nginx

  tasks:

    # curl -v -k -L -u admin:password https://pulp/api/galaxy/v3/collections/
    - block:
        - name: "Wait for Pulp"
          uri:
            url: "https://pulp/api/galaxy/pulp/api/v3/status/"
            follow_redirects: all
            validate_certs: no
          register: result
          until: result.status == 200
          retries: 12
          delay: 5
      rescue:
        - name: "Output pulp container log"
          command: "docker logs pulp"
          failed_when: true
          connection: local

    - name: "Set pulp admin password"
      command:
        cmd: "pulpcore-manager reset-admin-password --password password"

    - name: "Install django-extensions"
      command:
        cmd: "pip3 install django-extensions"

    - name: "Compile messages"
      galaxy_ng.tools.local_run:
        command: docker exec pulp /bin/bash -c 'django-admin compilemessages'

    - name: "Create the netrc file"
      copy:
        content: |
          machine pulp
          login admin
          password password
        dest: ~/.netrc
        mode: "0600"

    - name: munge the certifi store (so functional tests don't error on self-signed cert)
      shell: cat /etc/pulp/certs/pulp_webserver.crt >> $(python3 -c 'import certifi; print(certifi.where())')

    ##############################################################
    # EDITABLE INSTALL(S)
    ##############################################################
    
    - shell: mkdir -p /var/lib/operator/static/galaxy_ng
    - shell: touch /var/lib/operator/static/galaxy_ng/editor.worker.js

    - block:
        - name: "stop necessary services"
          shell: "s6-rc -d change {{ item }}"
          loop: "{{ s6_services_to_restart }}"

        - name: "re-install the checkouts with the editable flag"
          shell: if [[ -d /src/{{item}} ]] && [ ! -z "$(ls -A /src/{{item}})" ]; then pip3 install -e /src/{{ item }}; fi;
          loop:
            - galaxy_ng
            - galaxy-importer
            - pulp_ansible
            - pulp_container
            - pulpcore

        #- name: "re-install pulp_ansible ng with the editable flag"
        #  shell: if [[ -d pip3 install -e /src/galaxy_ng

        - name: "re-collect static files to avoid broken symlinks"
          shell: cd /src/galaxy_ng; django-admin collectstatic --noinput

        - name: "start necessary services"
          shell: "s6-rc -u change {{ item }}"
          loop: "{{ s6_services_to_restart }}"

      when: lookup('env', 'GALAXY_EDITABLE_INSTALL') == 'true'

    - block:
        - name: "Wait for Pulp"
          uri:
            url: "https://pulp/api/galaxy/pulp/api/v3/status/"
            follow_redirects: all
            validate_certs: no
          register: result
          until: result.status == 200
          retries: 12
          delay: 5
      rescue:
        - name: "Output pulp container log"
          command: "docker logs pulp"
          failed_when: true
          connection: local

      when: lookup('env', 'GALAXY_EDITABLE_INSTALL') == 'true'
