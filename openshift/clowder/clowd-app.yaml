---
apiVersion: v1
kind: Template
metadata:
  name: automation-hub
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: pulp-key
    namespace: automation-hub
  data:
    database_fields.symmetric.key: |
      RE5tTmR3Z3ladWdUYXg5UzY0SjBGSVRUcjlJSFB4YnVvRjFGMUNHUHI2OD0=

- apiVersion: v1
  kind: Secret
  metadata:
    name: signing-gpg-key
    namespace: automation-hub
  data:
    ansible-sign.key: |
      LS0tLS1CRUdJTiBQR1AgUFJJVkFURSBLRVkgQkxPQ0stLS0tLQoKbFFXRkJHR3lQc2dCREFDcFdPMkJleEgzb3JTSTJrc3NlcUxqUTloNkVxMkhhQlFkSkxMUVpadmtpV0IvZTNHeQo4Z3ZPM3dnUDdYeGNJSDA5a2Rkdm1FRmE0QlhoZVhOZDc0cUtUZG9LaDVVWDJvRm53MXJEd3JRamNNS3hKbmptCllrdTZicjY4a01mYU5rd3lRclNZN3d3WjNYRy9VZm9XdGRNZWhaS0RaV0QxWXdUdWFTSjVreGhzbVFWeGxOK1UKcFRNRzN1RUM3YXlrb2d5eklIMlBXdk1vYVArWER2VWI3WFhKczBaNTR0UHpGOW5nWXBOaXdUbE1ybTcrUTJGRwoxcW9nbktsekVmS0o5RlZTRTljTzdNR0NZT1lDVXJLY1BhaEVNTW5ORFJuWTVGd0NFVlRaaEgvTGdYZzBwWTd4CnB5S0F2Q0ZpK2oyUVNsWWx2aEdLSldnWkcydjlxSDZEUFJsYTVtZjgrZjYvZ3ZpRUd1bTlEd3dqbEoyYkZXcncKZlZHSDdJajlMMUQzcWp4RnVNSmt1bUVGOXFwZGZHOE5aWWluZ0RzYmd3amRLbjZWWHFtZFZrVVhORHduazNnRwp0UFE5d2Q0NnFyVVB6andKKzY2YzI4WEtuak9KYko3SFUxYnRoOXE3dXZub09xZ05KR0pWSmhYKzErQ1hoU0lBClVuUHNUT3E1aXZ4LzJEVUFFUUVBQWY0SEF3TDErdUxoWkdPbW52bklFZ3Z2OUNZRGNSRWh1b09VNDhrNTJkS3EKZEdpN1RGSlJuVncxTEJSTjZRRk9rc2I2R2ZIcUp1VTdPVUVZNGh3ZXQ1VFZzNG16VTZZQkpsQWFLL2JnRnd1QQo5TkFaZGxZejZDWjh4cGNteTNGM3RzVUlyZGY5TmhXQjRpQVZxald4QTZRWGZnaGlrODgzVHB2aE50K05KaEU2ClMxbFdkdFZURDNGRHZ6dEhXbzJ0MEtqQnpkZ0pGaFBTb2xEMGJvV1JubEVDS1UyZWsyeTUvWUZVeTVrQ2ZFWUgKN3RNV0ZtVGxZMVVzdGV1WkRQeTJiUjFXM3pHRSsvL3JoVTY1Skd2VUM2d3AvdkVvM0N0S0ZiL3A5OCtiK2E0NgpobHNVRmR6dXRSZW8yRjN2RHFjNEpUZjh3MkJCVWxEY3VLaXRCN1kzWjNIMHFJTHlZdGlReFdENUd4dXNSNHpLClpYYm9XWERVVXdGSlcwM2NZMlJZL0U1OGp6c1ZiM3RGcy9iQXcrMldRWnJ0OW5vdXI3SzZ4QUpHZGxlSitDeW8KVlV1YjJ1Yi9XMUV0TzVQWHV3S2VoQTF1T2VLMC9kZHdla29MbktITWZ4b0FVUEYvWnJjcjk2NHRqWjRGb2U3eQprQ0VOZXZFbkNIa29vdDhYU2ZrMFlDK2c3dVZ4alVDL3hjTDBCMWQxZkFmZm5jb0wyUGM2bEhqaTFpVkxLbkpPCk9LTmdGNy9JQXRoTUpabi9JY2ZBdXlSdk5SNk1sTHFQdDBHVmhJbmRIUDZmenFocVhCVzcxVFptSWVHUzVoZmIKTnhMTnBnS0k5RVhVblNHYlJXdWkwK2NRREsrRC9hYjdHZEVzcThPTTdKYkw2blhqbTVZNFhrd012MEt3WUtKZgpvZGpKeVJEcXN3d2pid203di9yQkFUbFlCakZacW8rOGo4UTVRWW9TWVNSazFqTUJxbW5QOE1pV1dvbFZJeVhGCjNreU51MVRSV3VseFJicWtSbDBZdElyR1ZzSnpHWFFFMG5ablo5Y2lRcGY3STZic2FXWnc4dVIyWCt4RVA4QTcKU0J0RW5RUC9GQ2x4U2NqaFdIMDk1VGFNN2RKRTNHUytubHUrSUtMTFdTYUVxdXVORnQ0U0JYYzc2MlpUUUZlSQp6WEcrVTVra1hFV3A3QitLVkNLdWdZc3ZrME5sVDlmY09qZVFDc0VCMDB1K2xjd1ltcHE3b0pveUM4M1cvM3RpClMzb1ZldGQ4RlJiQUJ3MHFIQURMcjJUNk40M3ZWT0lEVW9KM1o0K0llUVkvVGRJaWlaSjNyWHZJQ2FXWEp0clQKMUV5NER6TDZhYzRHNGNJNzZzc1AwWWtMZWlvR1MzYW1VQlJscHhWREJxZkJSbFAzOUpScWorTFhlSXdNMlI5VwplM1owczlISVZMRGFMWFJtQ0h2Vms1bHNwVk1NTmxHWnZjYm9LK3d4VUtCbHArU3FCK1NzaUd3R0JqRHJZd1EzCmR4SEJyUFcrUHZYTUQzd3JFMXM4K1EvKy8zTDRsME1La20zQXRkcWZteFp3a0hlT0tIQzBORXJoeHdZNjRYZEIKeHY0QWhlTHV2U0tXM1VrcTRxWDdwVTdCcTZNejFGd1B0QVo3Rm5yOUY2a0k5SGdSeWFKWDh3Z0hyL0d0MldVYwpWaVpZVnpybGNXOWdWSExVVjhpUU1OeVk2alJYSkE2V2ZBQjUyUk52VW5XMXVxRjJVT0k0UXlFTlpPclVmQy85CmplVnlqREhnSkkxdmZHNm9jMFFOdjJUcUExMmpNL1lrdENKSFlXeGhlSGtnUkdWMklETWdQR2RoYkdGNGVUTkEKWVc1emFXSnNaUzVqYjIwK2lRSE9CQk1CQ0FBNEFoc0RCUXNKQ0FjQ0JoVUtDUWdMQWdRV0FnTUJBaDRCQWhlQQpGaUVFNiswWERveVVnT0lxSFFXYkZTVU9uc0NtSlhjRkFtVjNKeVFBQ2drUUZTVU9uc0NtSlhjdmp3di9aSmc2CmNXLzFUdzZ2OStoellYekxEWDFzdDErTURTQmloRzR5eVk3Q0IvMERxNGNzM2MrckpjN21KSVZHRGp2ZS85dUYKT2VGZXNqbHBvaUx6WWtwOEpLSFVoandUaGo3WmVVYUpPakF0aVRNRkxJUUhYSjM4Z0c2MkdSMGQxMklzRkF1YwpDbkV3cFpOZGN1ZmordDZ4WnMxRlF2MVM2bisxVU1EaVNVWm84R3I2NlVXK3hDWExLRGpnVkpxUzdtSERPT0dQCk0xdTRYMkxPMDJkandtcFVBQkdIN2JDeFZ3SEhQbnVCanhmREpRT0wxenlFbGJpa2JuTUFNc3gvVXZ2OEpQb3kKQ2tkSlhaT0k4MnRJbnhuVkRwM2t1QSsyeUFNWmNJaTg1c2xhdHBQVGRUcEsxQlVhWVBDZXJQRmt5d3dtY1NYSgpMRkhhdHNEeHVHb2g0bGdtZURjcnY1SnNzdHhzSkxnSGN3eXhRTnhxYVM0ZHZabTZpTnVKSlNnamRjOW9IYm8zCjdjWldSQi9jckVINVF1eGNXOGNTYXlvRm5OQll3NTJQcjAzUVZZR3JCc1pRNnVTWkM5ZVlEMUErVys1enUwUGsKVTl0azlwdWt1R01oYzFJWWNFanVsWXpUS3lMRWl6NG5qcG93dHgwZGxHdkRiK3NBWHVPeUxxdU1sMTFnblFXRwpCR0d5UHNnQkRBQ3NjdU53bE14OE83RTRzWHB4V210L3Q2SjF3TGxnd3Avbk1pbmFSRWNzbDBzWUxZaHU4czl4CjZBeXoycUg4WUIrazc3Y3h0MVRKeWhNa1h0Q3NYRmVxS1VrOXRJU0JCQTNzbjVJcU5EWlFUM2tiR05JQ0tObnUKYWlocnp0eXRYL0MrVDZxMkhSZGtJWGQrVW9ZbllwQWNoWTMvMUhxRkdJOUdOTEx3b0FlbkdDT2tRaU4ySFBoNgpZK3RwSFBJcjNNNnBkYktaeWRNN1l0d1EvazEwRXJ4QWdSZUR0ZGc3YVR1TFR5aVNFek1ENjdUNHA3WmtOUCtrCmpWN0IzN0djSENrYWpKeEM5VTFJbUR4c2JtcytGWVAwQU9KSFJJSDZ2WFo4dVpGNUFFWC9CVWIyc0h1bGJjWGMKcXBTYnNLT0FMZVkvMFM2cHNNRFliaXU0Zlg1UGdWL1hOdHBlWUhrSE5HNzVXQkdoRG5TYnFQemdnbStyV1FvQwpma1JSdEdmcm56ZVcyQTArSjMxM09heVVJM3U2bTdQT3JaOVhzOUZZSXB4M1JwUC9BbjNoUUU3aTUrT2p5RWdYCkRGcEZ0SUN1NEZFbDlheEwyc1BCaXpmWkRCK1pJdXNOZGlVYW1NYlVkUm5jbmtzdU1lS205bDVtV1kyM210UysKZUw5cU5CektJL2tBRVFFQUFmNEhBd0tXck5xMTBZY0ErUGxRbjA5Y2ZJZGtsSktCeDZ2aGJGZXlRMGUrcjlwSgpuZ2srczRiaE9GYWxiWXNyWmxSSUVFTEVZaUF2WTZDNUlWaHdrVnBQdVd4akt5YTZGbFRtcWRQTTJaU0pqb2xoClBPVW9NTzRGMyswYkNsR0U0ZllqWWlVNE5aWjNmeVh2T1R0eDhBS09TSXJ6TFA3UnY1QVJHR202WUxMQkxiYm0KQXl6Yk5hQ2F2RnQ5L2dhb2R2dFR3cUgvaGtNblB4bld3M1NxL0psaDBOOUNMS0lNWU5oeTI5bHR0dFJqcmkvSwp3aDlIRWViM3NDYyt6cmgwZHBWRzNleVBjQlNjdEpCeGlkVHFWQ0xRTkhPbmlvZmdDd0dpeEZuRTJ0KzhlWS84Cm84MFpsd0srR3ViOHBMOE1SOTJzdlZJaDdXeVBCSGthbzZIZU1uR1RrN0RYTzVxYmhBNTdyNHVXMUpTeWxKRGcKUFllSHRQbEo0T1BuOERldm9hU0Zla1U4aWRieWhhZWozd0ZwN2owTTFvRFhhYXVBNWg4KytyMkRhQWNwWWZwZwpIRktXWkRmclRXZ0lSdEt0YWNCY041dGFEaGZTWkZFd2Mvc2FHM05PeE81dlpCZU5CMmhiT2dNejFhaXZSZlVqCkc4ckJrOGpubXVsTjFWWkxLR0FqdldlYmpQRFZQM3lZSFEyMSttcklXRmo5QW1DSGJFclhoN1JidEEvbnF3L2gKRnJKelA2UGQvMXM3VmgwcWs0aVVhN1hIL2h1N0QvMGhwMkg0SjdBaFRlQUtLSGtJdHpJU1hMeURMV09xMERHZApOTnh0Z3FQa0Uybm9QZkxVNmRLRTJ5MGJHQmhCZklvU21sRkpYODNxZGFOSmRPNy9TemxzamlQSmxwcmJjN0NuClI2OEdOK01UQWdIbmd0NlF3dFlVMEYvSG8vZnlZcFN2N0ViT2cxRnJjVEtBdTcxRXVxSjd5RFFESHFicXFEbVoKSXdOSlRzRXlyOExUd0RTYkdDN2ZZbHN6SmpYWmZYS2RmZ3U2WEJkcDZiWGhzMzZwc2tQQnFvZDZwMG1vUm1CUwpnNWpFd2pqdndCWDFCQjBzSzZiem5uWi9SSGxieWVEbFc4NlY0RU9QR1FOVWFEZlhYN3gwekFKRGZ3Q0RlRzJyCmN6MkpHYTl2cUhKVnNZMWFYM3R4UXIzU0JvamR3bVBBWUJIL0JMUHhxWjlOSWdtTE1ucTV4VXo4YlpxL0NZOU8Kd0M5OG5iTHBlZXg5VTE1OWtWM1R4TnlCMVRxZGtqS0FwM1VGSlVIWWovYjluYUJHZW9WZmZXSDNJNzJpOWFUMgoveml1RlgxSjFxbkt2RkJvZWxETXEyaGQxbmYyOCtwVWtOMjNIbnhocU02N3A0U3BScW81N0E4Z1FCWVoxOUZFCkJVRTlxOGJhakJjZkxDM0xtNmlFWm1oa3BqWDMxRGRER2VuNHlKSFFGMWxVTndOeWRJRUZEemxTYUZYcGFrUEUKR1ZmRXg5R0drbG10d1d4WHBqY0FLK0pEN1RWejBUbVB5cWFmQURFS2tuYTdXNnIxQytJUElzUzN2OVhzYjd6WAp5L0NtVHFXemtJdktSSUkrc3FOcnBmcUNpTjNITU9xRFlVa21FdVAvQkhCS01OOTQ3MXJqRjNST0x2Qm5KN3loCk5TWks1YnRQTTZuUjY5Tm9lMjVzV29CVWFBQ3c2SDEwVGYzK1lZcmRpQVJZamRYeUFZZXdZdnYwNXk3M3lQK3AKeTZ6UUd5cWJDZXpPbmgrR3R4TDVzLzFGZFpPYTRva0J0Z1FZQVFnQUlBSWJEQlloQk92dEZ3Nk1sSURpS2gwRgpteFVsRHA3QXBpVjNCUUpsZHlkcUFBb0pFQlVsRHA3QXBpVjNPWUFMLzJsOUQ3NTg1ZWtoOWpKV1NRdnMvbmVNClpNYjhPUWVxRENqNVNYdGFxVG8wTElLcGxJUDRJYkpmTHp6dzdqNHRPSndQTTY3YjZPR01yRk83a3FYY3g5RnEKQUUzWERKbTJOZDFnTmJKbWlGT1ZCZkRUcWd0RkRPd3FUUC8zTll5TmhaWHEvazFnUEFCRWZNMms0SnQzNUhTRwo2b0JvbWszRkRNdHlsVElNWld4ZW1qWEZtdkp1cGtabTNHSHR3Qi85L0xPSjVVQ3pjTXdtM1pzTFd3bmY3Mlp5CjQvOWdGMmVEM3Jta3cwY0FMOVdiVlhyNnFSaFpJR0Z4aTFJMm8zUTNWNHBjY2RWTW8rUGMxeUs5VXhRWUNYK0EKSVdaOGMrMTNrSnVMK3JlR0VWQ0VEeDZiT2R0Rm9TWHgwYkNlOXZmY1hnWk5pNG1pZGxLVWkwZkJlM1d4cm5XMwo0cHZ6WkFSZlpobmJPRTZmV3dGU1NPZUVxRzVqTFlyaUx4SFlUQXo0ZHBvdW9FTWNTNFJpQzgwQk5ndEhLVlpECklFY3NBaTErblhZWFMzN01sUHZPNTJuVVZwRzBLaGhZZWpWekVGQi9aRDZ2a1JRdlI2dEt3Ni9kQ0EvaXg4dVcKRkkwK1lXWTU4THN4ZmRaam1CZ2gvcitDeUY3TFVJakMrSU9tRmk1bHhBPT0KPXZzSmgKLS0tLS1FTkQgUEdQIFBSSVZBVEUgS0VZIEJMT0NLLS0tLS0K
- apiVersion: v1
  kind: Secret
  metadata:
    name: signing-script
    namespace: automation-hub
  data:
    collection_sign.sh: |
      IyEvYmluL2Jhc2gKCkZJTEVfUEFUSD0kMQpTSUdOQVRVUkVfUEFUSD0iJDEuYXNjIgoKQURNSU5fSUQ9ImdhbGF4eTNAYW5zaWJsZS5jb20iClBBU1NXT1JEPSJHYWxheHkyMDIyIgpLRVlSSU5HPSIvZXRjL3B1bHAvY2VydHMvZ2FsYXh5LmtieCIKR05VUEdIT01FPSIvdG1wL2Fuc2libGUvLmdudXBnIgoKIyBDcmVhdGUgYSBkZXRhY2hlZCBzaWduYXR1cmUKZ3BnIC0tcXVpZXQgLS1iYXRjaCAtLW5vLWRlZmF1bHQta2V5cmluZyAtLWtleXJpbmcgJEtFWVJJTkcgLS1waW5lbnRyeS1tb2RlIGxvb3BiYWNrIC0teWVzIC0tcGFzc3BocmFzZSAgICRQQVNTV09SRCAtLWhvbWVkaXIgJEdOVVBHSE9NRSAtLWRldGFjaC1zaWduIC0tZGVmYXVsdC1rZXkgJEFETUlOX0lEICAgLS1hcm1vciAtLW91dHB1dCAkU0lHTkFUVVJFX1BBVEggJEZJTEVfUEFUSAoKIyBDaGVjayB0aGUgZXhpdCBzdGF0dXMKU1RBVFVTPSQ/CmlmIFsgJFNUQVRVUyAtZXEgMCBdOyB0aGVuCiAgZWNobyB7XCJmaWxlXCI6IFwiJEZJTEVfUEFUSFwiLCBcInNpZ25hdHVyZVwiOiBcIiRTSUdOQVRVUkVfUEFUSFwifQplbHNlCiAgZXhpdCAkU1RBVFVTCmZpCg==

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: galaxy-importer-config
    namespace: automation-hub
  data:
    galaxy-importer.cfg: |
      [galaxy-importer]
      LOG_LEVEL_MAIN = INFO
      RUN_ANSIBLE_TEST = True
      INFRA_PULP = True
      INFRA_OSD = True
      ANSIBLE_LOCAL_TMP = '/tmp/ansible'
      REQUIRE_V1_OR_GREATER = True
      CHECK_REQUIRED_TAGS = True

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: automation-hub
    namespace: automation-hub
  spec:
    # The name of the ClowdEnvironment providing the services
    envName: ${ENV_NAME}

    deployments:
    - name: "backend${SUFFIX}"
      minReplicas: ${{NGINX_REPLICAS}}
      podSpec:
        name: backend
        image: ${NGINX_IMAGE}:${NGINX_IMAGE_TAG}
        resources:
          limits:
            cpu: ${{NGINX_CPU_LIMIT}}
            memory: ${{NGINX_MEMORY_LIMIT}}
          requests:
            cpu: ${{NGINX_CPU_REQUEST}}
            memory: ${{NGINX_MEMORY_REQUEST}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        env:
          - name: LISTEN_PORT
            value: '8000'
          - name: GALAXY_API_HOST
            value: "automation-hub-galaxy-api${SUFFIX}"
          - name: GALAXY_API_PORT
            value: '8000'
          - name: CONTENT_APP_HOST
            value: "automation-hub-pulp-content-app${SUFFIX}"
          - name: CONTENT_APP_PORT
            value: '10000'
        volumeMounts:
          - name: cache
            mountPath: /var/cache/nginx
        volumes:
          - name: cache
            emptyDir: {}
      webServices:
        public:
            enabled: true
            apiPath: automation-hub

    - name: "galaxy-api${SUFFIX}"
      minReplicas: ${{GALAXY_API_REPLICAS}}
      podSpec:
        name: galaxy-api
        image: ${IMAGE_NAME}:${IMAGE_TAG}
        args: ['run', 'api']
        initContainers:
          - args: ['manage', 'migrate']
            inheritEnv: true
        resources:
          limits:
            cpu: ${{GALAXY_API_CPU_LIMIT}}
            memory: ${{GALAXY_API_MEMORY_LIMIT}}
          requests:
            cpu: ${{GALAXY_API_CPU_REQUEST}}
            memory: ${{GALAXY_API_MEMORY_REQUEST}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        env:
          - name: PULP_GALAXY_DEPLOYMENT_MODE
            value: 'insights'
          - name: PULP_CONTENT_ORIGIN
            value: ${{CONTENT_ORIGIN}}
          - name: PULP_RH_ENTITLEMENT_REQUIRED
            value: 'insights'
          - name: PULP_X_PULP_CONTENT_HOST
            value: 'automation-hub-pulp-content-app${SUFFIX}'
          - name: PULP_X_PULP_CONTENT_PORT
            value: '10000'
          - name: PULP_REDIS_SSL
            value: ${REDIS_SSL}
          - name: prometheus_multiproc_dir
            value: ${PROMETHEUS_DIR}
          - name: ENABLE_SIGNING
            value: ${ENABLE_SIGNING}
          - name: GNUPGHOME
            value: ${GNUPGHOME}
          - name: PULP_GALAXY_SIGNATURE_UPLOAD_ENABLED
            value: ${GALAXY_SIGNATURE_UPLOAD_ENABLED}
          - name: PULP_GALAXY_REQUIRE_SIGNATURE_FOR_APPROVAL
            value: ${GALAXY_REQUIRE_SIGNATURE_FOR_APPROVAL}
          - name: PULP_GALAXY_COLLECTION_SIGNING_SERVICE
            value: ${GALAXY_COLLECTION_SIGNING_SERVICE}
          - name: PULP_GALAXY_AUTO_SIGN_COLLECTIONS
            value: ${GALAXY_AUTO_SIGN_COLLECTIONS}
          - name: PULP_GALAXY_FEATURE_FLAGS__display_signatures
            value: ${GALAXY_FEATURE_FLAGS_DISPLAY_SIGNATURES}
          - name: PULP_GALAXY_FEATURE_FLAGS__execution_environments
            value: 'false'
        volumeMounts:
          - name: pulp-key
            mountPath: /etc/pulp/certs/database_fields.symmetric.key
            subPath: database_fields.symmetric.key
            readOnly: true
          - name: signing-gpg-key
            mountPath: /tmp/ansible-sign.key
            subPath: ansible-sign.key
            readOnly: true
          - name: signing-script
            mountPath: /var/lib/pulp/scripts
            readOnly: true
        volumes:
          - name: pulp-key
            secret:
              secretName: pulp-key
          - name: signing-gpg-key
            secret:
              secretName: signing-gpg-key
          - name: signing-script
            secret:
              defaultMode: 0555
              secretName: signing-script
      webServices:
        public:
            enabled: true

    - name: "pulp-content-app${SUFFIX}"
      minReplicas: ${{PULP_CONTENT_APP_REPLICAS}}
      podSpec:
        image: ${IMAGE_NAME}:${IMAGE_TAG}
        args: ['run', 'content-app']
        initContainers:
          - args: ["wait-for-migrations"]
            inheritEnv: true
        resources:
          limits:
            cpu: ${{PULP_CONTENT_APP_CPU_LIMIT}}
            memory: ${{PULP_CONTENT_APP_MEMORY_LIMIT}}
          requests:
            cpu: ${{PULP_CONTENT_APP_CPU_REQUEST}}
            memory: ${{PULP_CONTENT_APP_MEMORY_REQUEST}}
        livenessProbe:
          httpGet:
            path: /api/automation-hub/v3/artifacts/collections/
            port: 10000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /api/automation-hub/v3/artifacts/collections/
            port: 10000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        env:
          - name: PULP_GALAXY_DEPLOYMENT_MODE
            value: 'insights'
          - name: PULP_CONTENT_ORIGIN
            value: ${{CONTENT_ORIGIN}}
          - name: GUNICORN_PORT
            value: '10000'
          - name: PULP_REDIS_SSL
            value: ${REDIS_SSL}
          - name: ENABLE_SIGNING
            value: ${ENABLE_SIGNING}
          - name: GNUPGHOME
            value: ${GNUPGHOME}
        volumeMounts:
          - name: pulp-key
            mountPath: /etc/pulp/certs/database_fields.symmetric.key
            subPath: database_fields.symmetric.key
            readOnly: true
          - name: signing-gpg-key
            mountPath: /tmp/ansible-sign.key
            subPath: ansible-sign.key
            readOnly: true
          - name: signing-script
            mountPath: /var/lib/pulp/scripts
            readOnly: true
        volumes:
          - name: pulp-key
            secret:
              secretName: pulp-key
          - name: signing-gpg-key
            secret:
              secretName: signing-gpg-key
          - name: signing-script
            secret:
              defaultMode: 0555
              secretName: signing-script
      webServices:
        private:
            enabled: true

    - name: "pulp-worker${SUFFIX}"
      minReplicas: ${{PULP_WORKER_REPLICAS}}
      k8sAccessLevel: edit
      podSpec:
        image: ${IMAGE_NAME}:${IMAGE_TAG}
        args: ['run', 'worker']
        initContainers:
          - args: ["wait-for-migrations"]
            inheritEnv: true
        resources:
          limits:
            cpu: ${{PULP_WORKER_CPU_LIMIT}}
            memory: ${{PULP_WORKER_MEMORY_LIMIT}}
          requests:
            cpu: ${{PULP_WORKER_CPU_REQUEST}}
            memory: ${{PULP_WORKER_MEMORY_REQUEST}}
        env:
          - name: PULP_GALAXY_DEPLOYMENT_MODE
            value: 'insights'
          - name: PULP_CONTENT_ORIGIN
            value: ${{CONTENT_ORIGIN}}
          - name: IMPORTER_API_DOMAIN
            value: ${{API_DOMAIN}}
          - name: IMPORTER_JOB_NAMESPACE
            value: ${{IMPORTER_JOB_NAMESPACE}}
          - name: IMPORTER_IMAGE_TAG
            value: ${IMPORTER_IMAGE_TAG}
          - name: IMPORTER_MEMORY_REQUEST
            value: 1Gi
          - name: IMPORTER_MEMORY_LIMIT
            value: 2Gi
          - name: IMPORTER_CPU_REQUEST
            value: 500m
          - name: IMPORTER_CPU_LIMIT
            value: 1000m
          - name: PULP_REDIS_SSL
            value: ${REDIS_SSL}
          - name: ENABLE_SIGNING
            value: ${ENABLE_SIGNING}
          - name: GNUPGHOME
            value: ${GNUPGHOME}
        volumeMounts:
          - name: importer-config
            mountPath: /etc/galaxy-importer
          - name: pulp-key
            mountPath: /etc/pulp/certs/database_fields.symmetric.key
            subPath: database_fields.symmetric.key
            readOnly: true
          - name: signing-gpg-key
            mountPath: /tmp/ansible-sign.key
            subPath: ansible-sign.key
            readOnly: true
          - name: signing-script
            mountPath: /var/lib/pulp/scripts
            readOnly: true
        volumes:
          - name: importer-config
            configMap:
              name: galaxy-importer-config
          - name: pulp-key
            secret:
              secretName: pulp-key
          - name: signing-gpg-key
            secret:
              secretName: signing-gpg-key
          - name: signing-script
            secret:
              defaultMode: 0555
              secretName: signing-script

    # Creates a database if local mode, or uses RDS in production
    database:
      # Must specify both a name and a major postgres version
      name: automation-hub
      version: 12

    inMemoryDb: true

    objectStore:
      - automation-hub

parameters:
- description: Clowder ENV
  name: ENV_NAME
  required: true
- name: SUFFIX
  value: ''

- descripton: Automation Hub image name
  name: IMAGE_NAME
  value: "quay.io/cloudservices/automation-hub-galaxy-ng"
- description: Automation Hub image tag
  name: IMAGE_TAG
  required: true

- name: NGINX_IMAGE
  value: "quay.io/cloudservices/automation-hub-nginx"
- name: NGINX_IMAGE_TAG
  value: latest

- name: IMPORTER_JOB_NAMESPACE
  required: true
- name: IMPORTER_IMAGE_TAG
  value: 'latest'
- name: CONTENT_ORIGIN
  value: 'localhost'
- name: API_DOMAIN
  value: https://kubernetes.default.svc:443
- name: REDIS_SSL
  value: "false"
- name: PROMETHEUS_DIR
  value: "/tmp"

# signing requirements
- name: ENABLE_SIGNING
  value: "1"
- name: GNUPGHOME
  value: "/tmp/ansible/.gnupg"
- name: GALAXY_SIGNATURE_UPLOAD_ENABLED
  value: "true"
- name: GALAXY_REQUIRE_SIGNATURE_FOR_APPROVAL
  value: "true"
- name: GALAXY_COLLECTION_SIGNING_SERVICE
  value: "ansible-default"
- name: GALAXY_AUTO_SIGN_COLLECTIONS
  value: "true"
- name: GALAXY_FEATURE_FLAGS_DISPLAY_SIGNATURES
  value: "false"

# nginx resource requirements
- name: NGINX_REPLICAS
  value: '1'
- name: NGINX_MEMORY_REQUEST
  value: 64Mi
- name: NGINX_MEMORY_LIMIT
  value: 128Mi
- name: NGINX_CPU_REQUEST
  value: 50m
- name: NGINX_CPU_LIMIT
  value: 200m

# galaxy-api resource requirements
- name: GALAXY_API_REPLICAS
  value: '1'
- name: GALAXY_API_MEMORY_REQUEST
  value: 1536Mi
- name: GALAXY_API_MEMORY_LIMIT
  value: 1536Mi
- name: GALAXY_API_CPU_REQUEST
  value: 200m
- name: GALAXY_API_CPU_LIMIT
  value: '1'

# pulp-content-app resource requirements
- name: PULP_CONTENT_APP_REPLICAS
  value: '1'
- name: PULP_CONTENT_APP_MEMORY_REQUEST
  value: 1536Mi
- name: PULP_CONTENT_APP_MEMORY_LIMIT
  value: 1536Mi
- name: PULP_CONTENT_APP_CPU_REQUEST
  value: 200m
- name: PULP_CONTENT_APP_CPU_LIMIT
  value: '1'

# pulp-worker resource requirements
- name: PULP_WORKER_REPLICAS
  value: '1'
- name: PULP_WORKER_MEMORY_REQUEST
  value: 256Mi
- name: PULP_WORKER_MEMORY_LIMIT
  value: 512Mi
- name: PULP_WORKER_CPU_REQUEST
  value: 200m
- name: PULP_WORKER_CPU_LIMIT
  value: 500m
