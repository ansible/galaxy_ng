---
name: galaxy_ng/ci
on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
  workflow_dispatch:

jobs:

  lint_po:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.after }}  # for PR avoids checking out merge commit
          fetch-depth: 0  # include all history

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: install and run lint-po
        run: |
          pip3 install lint-po
          lint-po ./galaxy_ng/locale/*/LC_MESSAGES/*.po

  lint:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.after }}  # for PR avoids checking out merge commit
          fetch-depth: 0  # include all history

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install requirements
        run: pip3 install -r lint_requirements.txt

      - name: Run linters
        run: make lint

      - name: Check for gettext problems
        run: sh .ci/scripts/check_gettext.sh

  test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: checkout dab
        run: |
          cd ..
          git clone https://github.com/ansible/django-ansible-base

      - name: install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libsasl2-dev libldap2-dev libssl-dev gettext

      - name: install tox & coverage
        run: pip3 install tox coverage[toml]

      - name: run the unit tests
        run: tox --colored yes -e py311

      - name: Inject PR number into coverage.xml
        run: sed -i '2i <!-- PR ${{ github.event.number }} -->' coverage.xml

      - name: upload coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

      - name: 'Extract and export repo owner/name'
        shell: bash
        run: |
          # 1. Read the full slug (owner/repo)
          REPO_SLUG="${GITHUB_REPOSITORY}"
          # 2. Split into owner and repo
          IFS="/" read -r REPO_OWNER REPO_NAME <<< "$REPO_SLUG"
          # 3. Export to the workflow environment
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME"   >> $GITHUB_ENV

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: github.event_name == 'push' && contains(github.repository, 'ansible') && github.ref_name == 'main'
        env:
          SONAR_TOKEN: ${{ secrets.CICD_ORG_SONAR_TOKEN_CICD_BOT || secrets.AAP_ORG_SONAR_TOKEN_ANSIBLE_CICD_BOT }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.REPO_OWNER }}_${{ env.REPO_NAME }}
            -Dsonar.organization=${{ env.REPO_OWNER }}

      - name: upload jUnit XML test results
        if: github.event_name == 'push' && contains(github.repository, 'ansible') && github.ref_name == 'main'
        continue-on-error: true
        run: |
          curl -v --user "${{ vars.PDE_ORG_RESULTS_AGGREGATOR_UPLOAD_USER }}:${{ secrets.PDE_ORG_RESULTS_UPLOAD_PASSWORD }}" \
            --form "xunit_xml=@/tmp/galaxy_ng-test-results.xml" \
            --form "component_name=hub" \
            --form "git_commit_sha=${{ github.sha }}" \
            --form "git_repository_url=https://github.com/${{ github.repository }}" \
            "${{ vars.PDE_ORG_RESULTS_AGGREGATOR_UPLOAD_URL }}/api/results/upload/"
