# WARNING: DO NOT EDIT!
#
# This file was generated by plugin_template, and is managed by it. Please use
# './plugin-template --github galaxy_ng' to update this file.
#
# For more info visit https://github.com/pulp/plugin_template

---
name: "Galaxy CI"
on: {pull_request: {branches: ['**']}, push: {branches: ['**']}}

concurrency:
  group: ${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: "galaxy_ng"

jobs:
  check_commit:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.after }}  # for PR avoids checking out merge commit
          fetch-depth: 0  # include all history

      - name: Run script to validate commits for both pull request and a push
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"
          GITHUB_USER: "${{ github.event.pull_request.user.login }}"
          GITHUB_PR_COMMITS_URL: ${{ github.event.pull_request.commits_url }}
          START_COMMIT: ${{ github.event.before }}
          END_COMMIT: ${{ github.event.after }}
        run: |
          cd ..
          python .ci/scripts/validate_commit_message_custom.py

  lint_po:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - run: |
          cd ..
          pip install lint-po
          lint-po ./galaxy_ng/locale/*/LC_MESSAGES/*.po

  lint:
    needs: check_commit
    uses: "./.github/workflows/lint.yml"

  build:
    needs: "lint"
    uses: "./.github/workflows/build.yml"

  test:
    needs: "build"
    uses: "./.github/workflows/test.yml"

  ready-to-ship:
    # This is a dummy dependent task to have a single entry for the branch protection rules.
    runs-on: "ubuntu-latest"
    needs:
      - "lint"
      - "test"
    if: "always()"
    steps:
      - name: "Collect needed jobs results"
        working-directory: "."
        run: |
          echo '${{toJson(needs)}}' | jq -r 'to_entries[]|select(.value.result!="success")|.key + ": " + .value.result'
          echo '${{toJson(needs)}}' | jq -e 'to_entries|map(select(.value.result!="success"))|length == 0'
          echo "CI says: Looks good!"
  update_manifest:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Set GITHUB_BRANCH"
        run: |
          GITHUB_BRANCH=`sed 's/^refs\/heads\///' <<< $GITHUB_REF`
          echo "GITHUB_BRANCH=${GITHUB_BRANCH}" >> $GITHUB_ENV

      - name: Update Manifest for Ansible Hub UI
        env:
          GITHUB_PULL_REQUEST: ${{ github.event.number }}
          MANIFEST_PASSPHRASE: ${{ secrets.MANIFEST_PASSPHRASE }}
        shell: bash
        run: |
          cd ..
          .github/workflows/scripts/update_manifest.sh
