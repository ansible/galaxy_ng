---
name: Insights
on: 
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Update apt
        run: sudo apt -y update

      - name: Install LDAP requirements
        run: sudo apt-get install -y libsasl2-dev python-dev libldap2-dev libssl-dev build-essential

      - name: Install docker-compose
        run: pip3 install --upgrade docker-compose

      - name: collect system info
        run: whoami; id; pwd; ls -al; uname -a ; df -h .; mount ; cat /etc/issue; docker --version ; ps aux | fgrep -i docker; ls -al /var/run/containerd/containerd.sock

      - name: clone the hub ui repo
        run: git clone https://github.com/ansible/ansible-hub-ui /tmp/ansible-hub-ui 

      - name: create the .compose.env file
        run: rm -f .compose.env; cp .compose.env.example .compose.env

      - name: set the compose profile
        run: sed -i.bak 's/COMPOSE_PROFILE=standalone/COMPOSE_PROFILE=insights/' .compose.env

      - name: workaround github worker permissions issues - disable editable installs
        run: sed -i.bak 's/PIP_EDITABLE_INSTALL=1/PIP_EDITABLE_INSTALL=0/' .compose.env

      - name: workaround github worker permissions issues - disable dev installs
        run: sed -i.bak 's/WITH_DEV_INSTALL=1/WITH_DEV_INSTALL=0/' .compose.env

      - name: require approval
        run: sed -i.bak 's/# PULP_GALAXY_REQUIRE_CONTENT_APPROVAL=false/PULP_GALAXY_REQUIRE_CONTENT_APPROVAL=true/' .compose.env

      - name: disable signing
        run: sed -i.bak 's/ENABLE_SIGNING=1/ENABLE_SIGNING=0/' .compose.env

      - name: build stack
        run: make docker/build

      - name: run migrations
        run: make docker/migrate

      - name: load test data
        run: make docker/loaddata

      - name: start the compose stack
        run: ./compose up -d

      - name: give stack some time to spin up
        run: sleep 120

      - name: run the integration tests
        run: ./dev/insights/RUN_INTEGRATION.sh
